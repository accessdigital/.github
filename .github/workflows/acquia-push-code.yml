name: Workflow to push a build artefact to Acquia.

on:
  workflow_call:
    inputs:
      git_name:
        description: 'The git committer name'
        type: string
        required: true
      git_email:
        description: 'The git committer email'
        type: string
        required: true
      dry_run:
        description: 'Whether this should be a dry-run only (no push to Acquia)'
        type: boolean
        required: true
      source_key:
        description: 'The source cache key suffix, or empty to checkout'
        type: string
    secrets:
      ACQUIA_REPO:
        description: 'URL of the Acquia repo.'
        required: true
      ACQUIA_SSH_KEY:
        description: 'Private SSH key authorised to push to the Acquia repo.'
        required: true
      SSH_CONFIG:
        description: 'SSH configuration'
        required: true
      KNOWN_HOSTS:
        description: 'SSH known hosts'
        required: true

defaults:
  run:
    shell: bash

jobs:
  push-code:
    name: 'Build artefact and push to Acquia'
    runs-on: ubuntu-latest
    steps:
      - name: Restore build from a previous step.
        # Only restore if we have a source key.
        if: inputs.source_key != ''
        uses: actions/cache@v2
        id: restore-build
        with:
          path: ./*
          # We are only interested in a direct hit.
          key: build-${{ github.sha }}-${{ inputs.source_key }}

      - name: Abort if we have a source build cache miss.
        run: exit 1
        # Only check if we have a source key.
        if: |
          inputs.source_key != '' &&
          steps.restore-build.outputs.cache-hit != 'true'

      - name: Checkout the code.
        # Only if we do not have a source key.
        if: inputs.source_key == ''
        uses: actions/checkout@v3

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-dir)"

      - name: Preserve the composer cache.
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          # Save the cache with the hash of the lock files.
          key: composer-${{ hashFiles('**/composer.lock') }}
          # If there is no direct hit, restore the latest composer-* cache. This
          # will first look on the current branch, then on the parent/default
          # branch.
          restore-keys: |
            composer-

      - name: Preserve the npm cache.
        uses: actions/cache@v2
        with:
          path: |
            ~/.npm
            ~/.nvm
          # Save the cache with the hash of the lock files.
          key: npm-${{ hashFiles('**/package-lock.json') }}
          # If there is no direct hit, restore the latest npm-* cache. This will
          # first look on the current branch, then on the parent/default branch.
          restore-keys: |
            npm-

      - name: Set up the SSH key and configuration.
        uses: shimataro/ssh-key-action@v2.3.1
        with:
          key: ${{ secrets.ACQUIA_SSH_KEY }}
          config: ${{ secrets.SSH_CONFIG }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}

      - name: Deploy the artifact for branches
        if: startsWith(github.ref, 'refs/heads/')
        env:
          DRY_RUN: inputs.dry_run && '--dry-run'
        run: |
          ./vendor/bin/blt artifact:deploy --dry-run --commit-msg "[BUILD ${COMMIT_SHA:0:7}] $COMMIT_MSG" $DRY_RUN --branch "${COMMIT_REF:11}-build" --no-interaction --verbose
          echo "⚡ Branch ${COMMIT_REF:11}-build pushed to Acquia!" >> $GITHUB_STEP_SUMMARY

      - name: Deploy the artifact for tags
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          ./vendor/bin/blt artifact:deploy --dry-run --commit-msg "[BUILD ${COMMIT_REF:10}] $COMMIT_MSG" $DRY_RUN --tag "${COMMIT_REF:10}-build" --no-interaction --verbose
          echo "⚡ Tag ${COMMIT_REF:10}-build pushed to Acquia!" >> $GITHUB_STEP_SUMMARY
