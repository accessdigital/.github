name: Build and validate an NPM package.

on:
  workflow_call:
    inputs:
      directory:
        description: 'The directory in which to run commands'
        type: string
        required: true
      container:
        description: 'The docker image to use'
        type: string
        required: true
      source_key:
        description: 'The source cache key suffix, or empty to checkout'
        type: string
      target_key:
        description: 'The target cache key suffix, or empty to throw away'
        type: string
        default: 'npm'
      ssh_config:
        description: 'Indicate we need to run SSH configuration for asset access'
        type: boolean
        default: false
      run_build:
        description: 'Optionally run `npm run build`'
        type: boolean
        default: true
      check_git:
        description: 'Optionally check for changes in git tracked files'
        type: boolean
        default: true
      run_tests:
        description: 'Optionally run `npm run test`'
        type: boolean
        default: false
    secrets:
      SSH_KEY:
        description: 'Private SSH key for any authenticated assets'
      SSH_CONFIG:
        description: 'SSH configuration'
      KNOWN_HOSTS:
        description: 'SSH known hosts'

defaults:
  run:
    shell: bash

jobs:
  npm-build:
    name: Build using npm
    runs-on: ubuntu-latest
    container: ${{ inputs.container }}
    steps:
      - name: Set up the build cache.
        # Only run if we have a target build.
        if: inputs.target_key != ''
        uses: actions/cache@v3
        id: target-build
        with:
          path: ./*
          # We are only interested in a direct hit.
          key: build-${{ github.sha }}-${{ inputs.target_key }}

      - name: Restore build from a previous step.
        # Skip if we already have a full build.
        # Only restore if we have a source key.
        if: |
          (inputs.target_key == '' || steps.target-build.outputs.cache-hit != 'true') &&
          inputs.source_key != ''
        uses: actions/cache@v3
        id: restore-build
        with:
          path: ./*
          # We are only interested in a direct hit.
          key: build-${{ github.sha }}-${{ inputs.source_key }}

      - name: Abort if we have a source build cache miss.
        run: exit 1
        # Skip if we already have a full build.
        if: |
          (inputs.target_key == '' || steps.target-build.outputs.cache-hit != 'true') &&
          inputs.source_key != '' &&
          steps.restore-build.outputs.cache-hit != 'true'

      - name: Checkout the code.
        # Skip if we already have a full build.
        if: |
          (inputs.target_key == '' || steps.target-build.outputs.cache-hit != 'true') &&
          inputs.source_key == ''
        uses: actions/checkout@v3

      - name: Preserve the npm cache.
        # Skip if we already have a full build.
        if: (inputs.target_key == '' || steps.target-build.outputs.cache-hit != 'true')
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            ~/.nvm
          # Save the cache with the hash of the lock files.
          key: npm-${{ hashFiles('**/package-lock.json') }}
          # If there is no direct hit, restore the latest npm-* cache. This will
          # first look on the current branch, then on the parent/default branch.
          restore-keys: |
            npm-

      - name: Set up the SSH key and configuration.
        # Skip if we already have a full build.
        # Run if we should configure SSH.
        if: |
          (inputs.target_key == '' || steps.target-build.outputs.cache-hit != 'true') &&
          inputs.ssh_config
        uses: shimataro/ssh-key-action@v2.3.1
        with:
          key: ${{ secrets.SSH_KEY }}
          config: ${{ secrets.SSH_CONFIG }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}

      - name: Install dependencies.
        # Skip if we already have a full build.
        if: (inputs.target_key == '' || steps.target-build.outputs.cache-hit != 'true')
        run: npm --prefix "${{ inputs.directory }}" ci

      - name: Run the build.
        # Skip if we already have a full build.
        if: (inputs.target_key == '' || steps.target-build.outputs.cache-hit != 'true') &&
          inputs.run_build
        run: npm --prefix "${{ inputs.directory }}" run build

      - name: Check for changes to committed code.
        if: inputs.check_git
        run: |
          git diff
          git diff-index --quiet HEAD

      - name: Run tests.
        if: inputs.run_tests
        run: npm --prefix "${{ inputs.directory }}" run test
