name: Workflow to backup databases on Acquia.

on:
  workflow_call:
    inputs:
      filter:
        description: 'Optionally, provide a filter for the databases. See: https://docs.acquia.com/acquia-cli/commands/#api-environments-database-list'
        type: string
        required: false
      php_version:
        description: 'Optionally, specify a PHP version to install. Default: 8.2.'
        type: string
        required: false
        default: '8.2'
    secrets:
      ENVIRONMENT_ID:
        description: 'Acquia environment ID.'
        required: true
      ACLI_CLIENT_ID:
        description: 'The client ID for authenticating with ACLI.'
        required: true
      ACLI_CLIENT_SECRET:
        description: 'The client secret for authenticating with ACLI.'
        required: true

defaults:
  run:
    shell: bash

jobs:
  backup-databases:
    name: 'Backup Acquia databases'
    runs-on: ubuntu-latest
    outputs:
      databases: ${{ steps.get_databases.outputs.database_list }}
    steps:
      - name: Checking out code
        uses: actions/checkout@v3

      - name: Installing PHP
        uses: shivammathur/setup-php@master
        with:
          php-version: ${{ inputs.php_version }}

      - name: Installing dependencies
        run: |
          curl -OL https://github.com/acquia/cli/releases/download/2.13.0/acli.phar
          echo "ACLI downloaded!"

      - name: Authorizing with ACLI
        run: |
          php acli.phar auth:login -n \
            --key="${{ secrets.ACLI_CLIENT_ID }}" \
            --secret="${{ secrets.ACLI_CLIENT_SECRET }}"

      - name: Retrieving all database names for this environment
        id: get_databases
        # Gets databases filtering by a name. If no filter is provided, it'll
        # retrieve all databases.
        run: |
          database_list=$(php acli.phar api:environments:database-list \
            --filter='${{ inputs.filter }}' \
            ${{ secrets.ENVIRONMENT_ID }})
          echo "DB list start"
          echo ${database_list}
          echo "DB list end"

      - name: Backing up databases
        run: |
          while read database; do \
            php acli.phar api:environments:database-backup-create ${{ secrets.ENVIRONMENT_ID }} $database && echo "üíß Successfully backed up database $database!" || echo "‚ùå Error backing up database $database. See logs."; exit 1 \
          done <${{ steps.get_databases.outputs.databases }}
